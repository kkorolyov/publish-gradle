name: Publish Gradle
description: |
  Builds and publishes versioned build artifacts for a gradle project.
  Uses the 'reckon' plugin (https://github.com/ajoberstar/reckon) to determine version.
  By default, simply builds the project.
  If the last commit message contains any of the terms [MAJOR, BREAKING], a new major version is published.
  If the last commit message contains any of the terms [PATCH, HOTFIX], a new patch version is published.

inputs:
  java-version:
    description: Java version to run against
    required: true
  java-distribution:
    description: Java distribution to run against
    required: true
    default: temurin
  build-task:
    description: Basic build task
    required: true
    default: build
  publish-task:
    description: Artifact publishing task
    required: true
    default: publish
  publish-branch:
    description: If set, name of distinct branch on which 'publish-task' can run. Execution from other branches / PRs will only run 'build-task'.
    required: false
  token:
    description: Token for Github maven repository read/write
    required: true

runs:
  using: composite
  steps:
    - id: java
      uses: actions/setup-java@v3
      with:
        java-version: ${{ inputs.java-version }}
        cache: gradle
        distribution: ${{ inputs.java-distribution }}

    - id: tags
      shell: bash
      run: git fetch --unshallow --tags

    - id: build
      shell: bash
      run: |
        publishBranch="${{ inputs.publish-branch }}"
        ref="${{ github.ref }}"
        msg="${{ github.event.head_commit.message }}"

        case "$msg" in
          *MAJOR* | *BREAKING*)
            scope=major
            ;;
          *MINOR*)
            scope=minor
            ;;
          *PATCH* | *HOTFIX*)
            scope=patch
            ;;
        esac

        if ([ -z "$publishBranch" ] || [ "$ref" = "refs/heads/${publishBranch}" ]) && [ -n "$scope" ]; then
          echo "Running publish task"
          task="${{ inputs.publish-task }} reckonTagPush -Preckon.stage=final -Preckon.scope=$scope"
        else
          echo "Running build task"
          task="${{ inputs.build-task }}"
        fi

        ./gradlew $task --no-daemon
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
